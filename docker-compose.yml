version: "3.9"

services:
  # üß© MongoDB
  mongodb:
    image: mongo:7
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - eproject-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

  # üß© RabbitMQ
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672" # Web UI
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - eproject-network
    restart: always

  # üß© Auth service
  auth:
    build: ./auth
    container_name: auth_service
    env_file:
      - ./auth/.env
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - eproject-network
    command: sh -c "sleep 5 && node index.js"
    restart: always

  # üß© Product service
  product:
    build: ./product
    container_name: product_service
    env_file:
      - ./product/.env
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      auth:
        condition: service_started
    networks:
      - eproject-network
    command: sh -c "sleep 7 && node index.js"
    restart: always

  # üß© Order service
  order:
    build: ./order
    container_name: order_service
    env_file:
      - ./order/.env
    ports:
      - "3002:3002"
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      auth:
        condition: service_started
      product:
        condition: service_started
    networks:
      - eproject-network
    command: sh -c "sleep 10 && node index.js"
    restart: always

  # üß© API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api_gateway_service
    env_file:
      - ./api-gateway/.env
    ports:
      - "3003:3003"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      auth:
        condition: service_started
      order:
        condition: service_started
      product:
        condition: service_started
    networks:
      - eproject-network
    command: sh -c "sleep 12 && node index.js"
    restart: always

# üß± Volumes ƒë·ªÉ l∆∞u tr·ªØ d·ªØ li·ªáu MongoDB
volumes:
  mongo_data:

# üåê M·∫°ng n·ªôi b·ªô gi·ªØa c√°c service
networks:
  eproject-network:
    driver: bridge
