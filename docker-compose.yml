services:
  # MongoDB
  mongodb:
    image: mongo:7
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - eproject-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672" # web UI
    # volumes:
    #   - rabbitmq_data:/var/lib/rabbitmq
    #   - rabbitmq_log:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - eproject-network

  # Auth service
  auth:
    build: ./auth
    container_name: auth_service
    env_file:
      - ./auth/.env
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - eproject-network
    command: ["node", "index.js"]

  # Product service
  product:
    build: ./product
    container_name: product_service
    env_file:
      - ./product/.env
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - eproject-network
    command: ["node", "index.js"]

  # Order service
  order:
    build: ./order
    container_name: order_service
    env_file:
      - ./order/.env
    ports:
      - "3002:3002"
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - eproject-network
    command: ["node", "index.js"]

volumes:
  mongo_data:

networks:
  eproject-network:
    driver: bridge
